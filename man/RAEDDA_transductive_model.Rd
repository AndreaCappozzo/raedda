% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/raeddat_model.R
\name{RAEDDA_transductive_model}
\alias{RAEDDA_transductive_model}
\title{Robust Eigenvalues Decomposition Discriminant Analysis (transductive approach)}
\usage{
RAEDDA_transductive_model(Xtrain, cltrain, Xtest, modelName = "EEE", G,
  alpha_Xtrain = 0, alpha_Xtest = 0.05, tol = 10^-5, iterlim = 1000,
  Aitken = TRUE, ...)
}
\arguments{
\item{Xtrain}{A numeric matrix of observations where rows correspond to observations and columns correspond to variables. The group membership of each observation is known - labeled data.}

\item{cltrain}{A vector (if numeric it will be coerced to factor) with distinct entries representing a classification of the corresponding observations in Xtrain.}

\item{Xtest}{A numeric matrix of observations where rows correspond to observations and columns correspond to variables. The group membership of each observation may not be known - unlabeled data.}

\item{modelName}{A character string indicating the model, with default "EEE". The models available for selection are described in \code{\link{modelvec}}}

\item{G}{A numeric vector indicating the number of expected classes in Xtest.}

\item{alpha_Xtrain}{The proportion of observations to be trimmed in Xtrain.}

\item{alpha_Xtest}{The proportion of observations to be trimmed in Xtest.}

\item{tol}{A non-negative number, with default 10^-5, which is a measure of how strictly convergence is defined.}

\item{iterlim}{A non-negative integer, with default 1000, which is the desired limit on the maximum number of iterations.}

\item{Aitken}{A logical value with default TRUE which tests for convergence using Aitken acceleration. If value is set to FALSE, convergence is tested by comparing tol to the change in log-likelihood between two consecutive iterations. For further information on Aitken acceleration, see \code{\link{Aitken}}}

\item{...}{Arguments passed to or from other methods}
}
\value{
The return value is a list with the following components:
}
\description{
This function implements a robust constrained version of the EM algorithm by iterating over the E-step, C-step and M-step.
The initial values are obtained from the labeled data then steps are further iterated over the untrimmed complete data,
labeled and unlabeled combined to jointly estimate model parameters while searching for new classes.
This function is not designed to be used on its own, but to be called by \code{\link{RAEDDA_transductive}}
}
\examples{

 data(iris, package = "mclust")
 X <- as.matrix(iris[, -5])
 cl <- iris[, 5]
 indtrain <- sort(sample(1:178, 120))
 indtest <- setdiff(1:178, indtrain)
 raeddat_fit <- upclassifymodel(X[indtrain,], cl[indtrain], X[indtest,], cl[indtest])
}
